version: '3.8'

services:
  # Neon Local - Postgres proxy for development
  neon-local:
    image: neondatabase/neon-proxy:latest
    container_name: neon-local
    environment:
      # Neon Local configuration
      APPEND_PORT: 'postgres:5432'
      ALLOW_ADDR_REGEX: '.*'
      RUST_LOG: 'info'
    ports:
      - '5432:5432'
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'pg_isready', '-h', 'localhost', '-p', '5432']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PostgreSQL - Backend for Neon Local
  postgres:
    image: postgres:16-alpine
    container_name: postgres-dev
    environment:
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: neondb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U neondb_owner -d neondb']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Application - Development mode
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: acquisitions-app-dev
    env_file:
      - .env.development
    environment:
      # Override DATABASE_URL to use neon-local
      DATABASE_URL: postgres://neondb_owner:devpassword@neon-local:5432/neondb
      NODE_ENV: development
      PORT: 5000
    ports:
      - '5000:5000'
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src:delegated
      - ./drizzle:/app/drizzle:delegated
      - ./drizzle.config.js:/app/drizzle.config.js:delegated
      # Prevent node_modules from being overwritten
      - /app/node_modules
      # Mount logs
      - ./logs:/app/logs
    depends_on:
      neon-local:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: npm run dev
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
